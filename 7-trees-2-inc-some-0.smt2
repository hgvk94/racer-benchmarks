(set-logic HORN)
(declare-datatypes ((%Tree 0)) (((%Tree-0 (%Tree-0.0 %Tree) (%Tree-0.1 Int) (%Tree-0.2 %Tree)) (%Tree-1))))
(declare-datatypes ((~Mut<Int> 0)) (((~mut<Int> (~cur<Int> Int) (~ret<Int> Int)))))
(declare-datatypes ((~Mut<%Tree> 0)) (((~mut<%Tree> (~cur<%Tree> %Tree) (~ret<%Tree> %Tree)))))
(declare-fun %main (Bool) Bool)
(declare-fun %main.6-abs (%Tree Bool Bool Int) Bool)
(declare-fun %sum (%Tree Int) Bool)
(declare-fun %some-abs (~Mut<%Tree> ~Mut<Int> Int Int) Bool)
(declare-fun %some.0-abs (~Mut<%Tree> ~Mut<Int> Int Int) Bool)
(declare-fun %some.4-abs
             (~Mut<%Tree>
              ~Mut<%Tree>
              ~Mut<Int>
              ~Mut<%Tree>
              Bool
              ~Mut<Int>
              Int
              Int
              Int
              Int
              Int
              Int)
             Bool)
(declare-fun %some.7-abs
             (~Mut<%Tree>
              ~Mut<%Tree>
              ~Mut<Int>
              ~Mut<%Tree>
              Bool
              Bool
              ~Mut<Int>
              Int
              Int
              Int
              Int
              Int
              Int)
             Bool)
(declare-fun %sum.0 (%Tree Int) Bool)
(define-funs-rec ( ( sum ((x!1 %Tree)) Int))
                 ( (ite (= x!1 %Tree-1)
                        0
                        (+ (%Tree-0.1 x!1)
                           ((_ sum 0) (%Tree-0.0 x!1))
                           ((_ sum 0) (%Tree-0.2 x!1))))))
(assert (forall ((_! Bool)
         (_@.2 Int)
         (_@.3 ~Mut<Int>)
         (_@.5 Int)
         (_?.0 %Tree)
         (_*.3_5 %Tree)
         (_*.3_6 %Tree)
         (c!0 Int)
         (c!1 Int)
         (c!2 Int))
  (let ((a!1 (%main.6-abs _*.3_5 (not (= _@.5 (+ _@.2 1))) _! c!2)))
  (let ((a!2 (and (= ((_ sum 0) _?.0) c!0)
                  (%sum _?.0 c!0)
                  (= ((_ sum 0) _*.3_6) c!1)
                  (%sum _*.3_6 c!1)
                  (= ((_ sum 0) _*.3_5) c!2)
                  (%sum _*.3_5 c!2)
                  (%sum _?.0 _@.2)
                  (%some-abs (~mut<%Tree> _?.0 _*.3_6) _@.3 c!0 c!1)
                  (%sum _*.3_5 _@.5)
                  a!1
                  (= ((_ sum 0) _?.0) _@.2)
                  (= ((_ sum 0) _*.3_5) _@.5)
                  (= _*.3_5 _*.3_6)
                  (= (~ret<Int> _@.3) (+ (~cur<Int> _@.3) 1)))))
    (=> a!2 (%main _!))))))
(assert (forall ((_! Bool) (_1 %Tree) (c!3 Int))
  (=> (and (= ((_ sum 0) _1) c!3) (%sum _1 c!3) (= _! false))
      (%main.6-abs _1 false _! c!3))))
(assert (forall ((_! Bool) (_1 %Tree) (c!4 Int))
  (=> (and (= ((_ sum 0) _1) c!4) (%sum _1 c!4) (= _! true))
      (%main.6-abs _1 true _! c!4))))
(assert (forall ((_@ ~Mut<Int>)
         (_1 ~Mut<%Tree>)
         (c!5 Int)
         (c!6 Int)
         (c!7 Int)
         (c!8 Int))
  (let ((a!1 (and (= ((_ sum 0) (~cur<%Tree> _1)) c!5)
                  (%sum (~cur<%Tree> _1) c!5)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!6)
                  (%sum (~ret<%Tree> _1) c!6)
                  (= ((_ sum 0) (~cur<%Tree> _1)) c!7)
                  (%sum (~cur<%Tree> _1) c!7)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!8)
                  (%sum (~ret<%Tree> _1) c!8)
                  (%some.0-abs _1 _@ c!7 c!8))))
    (=> a!1 (%some-abs _1 _@ c!5 c!6)))))
(assert (forall ((_$.0_0/2 %Tree)
         (_$.0_0/1 Int)
         (_$.0_0/0 %Tree)
         (_*.3_5 %Tree)
         (_*.3_3 Int)
         (_*.3_1 %Tree)
         (_?.3 Bool)
         (_@ ~Mut<Int>)
         (_1 ~Mut<%Tree>)
         (c!9 Int)
         (c!10 Int)
         (c!11 Int)
         (c!12 Int)
         (c!13 Int)
         (c!14 Int)
         (c!15 Int)
         (c!16 Int))
  (let ((a!1 (and (= ((_ sum 0) (%Tree-0 _$.0_0/0 _$.0_0/1 _$.0_0/2)) c!9)
                  (%sum (%Tree-0 _$.0_0/0 _$.0_0/1 _$.0_0/2) c!9)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!10)
                  (%sum (~ret<%Tree> _1) c!10)
                  (= ((_ sum 0) (%Tree-0 _*.3_1 _*.3_3 _*.3_5)) c!11)
                  (%sum (%Tree-0 _*.3_1 _*.3_3 _*.3_5) c!11)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!12)
                  (%sum (~ret<%Tree> _1) c!12)
                  (= ((_ sum 0) _$.0_0/0) c!13)
                  (%sum _$.0_0/0 c!13)
                  (= ((_ sum 0) _*.3_1) c!14)
                  (%sum _*.3_1 c!14)
                  (= ((_ sum 0) _$.0_0/2) c!15)
                  (%sum _$.0_0/2 c!15)
                  (= ((_ sum 0) _*.3_5) c!16)
                  (%sum _*.3_5 c!16)
                  (%some.4-abs (~mut<%Tree> (%Tree-0 _*.3_1 _*.3_3 _*.3_5)
                                            (~ret<%Tree> _1))
                               (~mut<%Tree> _$.0_0/0 _*.3_1)
                               (~mut<Int> _$.0_0/1 _*.3_3)
                               (~mut<%Tree> _$.0_0/2 _*.3_5)
                               _?.3
                               _@
                               c!11
                               c!12
                               c!13
                               c!14
                               c!15
                               c!16))))
    (=> a!1
        (%some.0-abs (~mut<%Tree> (%Tree-0 _$.0_0/0 _$.0_0/1 _$.0_0/2)
                                  (~ret<%Tree> _1))
                     _@
                     c!9
                     c!10)))))
(assert (forall ((_*.15_1 Int)
         (_*.15_0 Int)
         (_*.14_0 Int)
         (_*.1_2 %Tree)
         (_@.1 ~Mut<Int>)
         (_@ ~Mut<Int>)
         (_1 ~Mut<%Tree>)
         (c!17 Int)
         (c!18 Int)
         (c!19 Int)
         (c!20 Int))
  (let ((a!1 (and (= ((_ sum 0) %Tree-1) c!17)
                  (%sum %Tree-1 c!17)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!18)
                  (%sum (~ret<%Tree> _1) c!18)
                  (= ((_ sum 0) %Tree-1) c!19)
                  (%sum %Tree-1 c!19)
                  (= ((_ sum 0) _*.1_2) c!20)
                  (%sum _*.1_2 c!20)
                  (%some-abs (~mut<%Tree> %Tree-1 _*.1_2) _@.1 c!19 c!20)
                  (= (~ret<Int> _@.1) _*.14_0)
                  (= _*.14_0 _*.15_0)
                  (= _*.15_0 _*.15_1)
                  (= (~ret<%Tree> _1) _*.1_2)
                  (= _@ (~mut<Int> (~cur<Int> _@.1) _*.15_1)))))
    (=> a!1 (%some.0-abs (~mut<%Tree> %Tree-1 (~ret<%Tree> _1)) _@ c!17 c!18)))))
(assert (forall ((_?.5 Bool)
         (_@ ~Mut<Int>)
         (_7 ~Mut<%Tree>)
         (_6 ~Mut<Int>)
         (_5 ~Mut<%Tree>)
         (_1 ~Mut<%Tree>)
         (c!21 Int)
         (c!22 Int)
         (c!23 Int)
         (c!24 Int)
         (c!25 Int)
         (c!26 Int)
         (c!27 Int)
         (c!28 Int)
         (c!29 Int)
         (c!30 Int)
         (c!31 Int)
         (c!32 Int))
  (let ((a!1 (and (= ((_ sum 0) (~cur<%Tree> _1)) c!21)
                  (%sum (~cur<%Tree> _1) c!21)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!22)
                  (%sum (~ret<%Tree> _1) c!22)
                  (= ((_ sum 0) (~cur<%Tree> _5)) c!23)
                  (%sum (~cur<%Tree> _5) c!23)
                  (= ((_ sum 0) (~ret<%Tree> _5)) c!24)
                  (%sum (~ret<%Tree> _5) c!24)
                  (= ((_ sum 0) (~cur<%Tree> _7)) c!25)
                  (%sum (~cur<%Tree> _7) c!25)
                  (= ((_ sum 0) (~ret<%Tree> _7)) c!26)
                  (%sum (~ret<%Tree> _7) c!26)
                  (= ((_ sum 0) (~cur<%Tree> _1)) c!27)
                  (%sum (~cur<%Tree> _1) c!27)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!28)
                  (%sum (~ret<%Tree> _1) c!28)
                  (= ((_ sum 0) (~cur<%Tree> _5)) c!29)
                  (%sum (~cur<%Tree> _5) c!29)
                  (= ((_ sum 0) (~ret<%Tree> _5)) c!30)
                  (%sum (~ret<%Tree> _5) c!30)
                  (= ((_ sum 0) (~cur<%Tree> _7)) c!31)
                  (%sum (~cur<%Tree> _7) c!31)
                  (= ((_ sum 0) (~ret<%Tree> _7)) c!32)
                  (%sum (~ret<%Tree> _7) c!32)
                  (%some.7-abs _1
                               _5
                               _6
                               _7
                               false
                               _?.5
                               _@
                               c!27
                               c!28
                               c!29
                               c!30
                               c!31
                               c!32))))
    (=> a!1 (%some.4-abs _1 _5 _6 _7 false _@ c!21 c!22 c!23 c!24 c!25 c!26)))))
(assert (forall ((_*.15_1 Int)
         (_*.15_0 Int)
         (_*.13_1 Int)
         (_*.13_0 Int)
         (_*.6_2 Int)
         (_*.6_1 Int)
         (_@ ~Mut<Int>)
         (_7 ~Mut<%Tree>)
         (_6 ~Mut<Int>)
         (_5 ~Mut<%Tree>)
         (_1 ~Mut<%Tree>)
         (c!33 Int)
         (c!34 Int)
         (c!35 Int)
         (c!36 Int)
         (c!37 Int)
         (c!38 Int))
  (let ((a!1 (and (= ((_ sum 0) (~cur<%Tree> _1)) c!33)
                  (%sum (~cur<%Tree> _1) c!33)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!34)
                  (%sum (~ret<%Tree> _1) c!34)
                  (= ((_ sum 0) (~cur<%Tree> _5)) c!35)
                  (%sum (~cur<%Tree> _5) c!35)
                  (= ((_ sum 0) (~ret<%Tree> _5)) c!36)
                  (%sum (~ret<%Tree> _5) c!36)
                  (= ((_ sum 0) (~cur<%Tree> _7)) c!37)
                  (%sum (~cur<%Tree> _7) c!37)
                  (= ((_ sum 0) (~ret<%Tree> _7)) c!38)
                  (%sum (~ret<%Tree> _7) c!38)
                  (= _*.6_1 _*.6_2)
                  (= _*.6_2 _*.13_0)
                  (= _*.13_0 _*.13_1)
                  (= (~ret<%Tree> _7) (~cur<%Tree> _7))
                  (= (~ret<Int> _6) _*.6_1)
                  (= (~ret<%Tree> _5) (~cur<%Tree> _5))
                  (= _*.13_1 _*.15_0)
                  (= _*.15_0 _*.15_1)
                  (= (~ret<%Tree> _1) (~cur<%Tree> _1))
                  (= _@ (~mut<Int> (~cur<Int> _6) _*.15_1)))))
    (=> a!1 (%some.4-abs _1 _5 _6 _7 true _@ c!33 c!34 c!35 c!36 c!37 c!38)))))
(assert (forall ((_*.15_1 Int)
         (_*.15_0 Int)
         (_*.13_1 Int)
         (_*.13_0 Int)
         (_*.12_0 Int)
         (_*.11_2 Int)
         (_*.11_0 Int)
         (_*.8_3 %Tree)
         (_@.8 ~Mut<Int>)
         (_@ ~Mut<Int>)
         (_10 Bool)
         (_7 ~Mut<%Tree>)
         (_6 ~Mut<Int>)
         (_5 ~Mut<%Tree>)
         (_1 ~Mut<%Tree>)
         (c!39 Int)
         (c!40 Int)
         (c!41 Int)
         (c!42 Int)
         (c!43 Int)
         (c!44 Int)
         (c!45 Int)
         (c!46 Int))
  (let ((a!1 (and (= ((_ sum 0) (~cur<%Tree> _1)) c!39)
                  (%sum (~cur<%Tree> _1) c!39)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!40)
                  (%sum (~ret<%Tree> _1) c!40)
                  (= ((_ sum 0) (~cur<%Tree> _5)) c!41)
                  (%sum (~cur<%Tree> _5) c!41)
                  (= ((_ sum 0) (~ret<%Tree> _5)) c!42)
                  (%sum (~ret<%Tree> _5) c!42)
                  (= ((_ sum 0) (~cur<%Tree> _7)) c!43)
                  (%sum (~cur<%Tree> _7) c!43)
                  (= ((_ sum 0) (~ret<%Tree> _7)) c!44)
                  (%sum (~ret<%Tree> _7) c!44)
                  (= ((_ sum 0) (~cur<%Tree> _7)) c!45)
                  (%sum (~cur<%Tree> _7) c!45)
                  (= ((_ sum 0) _*.8_3) c!46)
                  (%sum _*.8_3 c!46)
                  (%some-abs (~mut<%Tree> (~cur<%Tree> _7) _*.8_3)
                             _@.8
                             c!45
                             c!46)
                  (= (~ret<Int> _@.8) _*.11_0)
                  (= _*.11_0 _*.11_2)
                  (= _*.11_2 _*.12_0)
                  (= _*.12_0 _*.13_0)
                  (= _*.13_0 _*.13_1)
                  (= (~ret<%Tree> _7) _*.8_3)
                  (= (~ret<Int> _6) (~cur<Int> _6))
                  (= (~ret<%Tree> _5) (~cur<%Tree> _5))
                  (= _*.13_1 _*.15_0)
                  (= _*.15_0 _*.15_1)
                  (= (~ret<%Tree> _1) (~cur<%Tree> _1))
                  (= _@ (~mut<Int> (~cur<Int> _@.8) _*.15_1)))))
    (=> a!1
        (%some.7-abs _1 _5 _6 _7 _10 false _@ c!39 c!40 c!41 c!42 c!43 c!44)))))
(assert (forall ((_*.15_1 Int)
         (_*.15_0 Int)
         (_*.13_1 Int)
         (_*.13_0 Int)
         (_*.12_0 Int)
         (_*.10_2 Int)
         (_*.10_0 Int)
         (_*.9_3 %Tree)
         (_@.9 ~Mut<Int>)
         (_@ ~Mut<Int>)
         (_10 Bool)
         (_7 ~Mut<%Tree>)
         (_6 ~Mut<Int>)
         (_5 ~Mut<%Tree>)
         (_1 ~Mut<%Tree>)
         (c!47 Int)
         (c!48 Int)
         (c!49 Int)
         (c!50 Int)
         (c!51 Int)
         (c!52 Int)
         (c!53 Int)
         (c!54 Int))
  (let ((a!1 (and (= ((_ sum 0) (~cur<%Tree> _1)) c!47)
                  (%sum (~cur<%Tree> _1) c!47)
                  (= ((_ sum 0) (~ret<%Tree> _1)) c!48)
                  (%sum (~ret<%Tree> _1) c!48)
                  (= ((_ sum 0) (~cur<%Tree> _5)) c!49)
                  (%sum (~cur<%Tree> _5) c!49)
                  (= ((_ sum 0) (~ret<%Tree> _5)) c!50)
                  (%sum (~ret<%Tree> _5) c!50)
                  (= ((_ sum 0) (~cur<%Tree> _7)) c!51)
                  (%sum (~cur<%Tree> _7) c!51)
                  (= ((_ sum 0) (~ret<%Tree> _7)) c!52)
                  (%sum (~ret<%Tree> _7) c!52)
                  (= ((_ sum 0) (~cur<%Tree> _5)) c!53)
                  (%sum (~cur<%Tree> _5) c!53)
                  (= ((_ sum 0) _*.9_3) c!54)
                  (%sum _*.9_3 c!54)
                  (%some-abs (~mut<%Tree> (~cur<%Tree> _5) _*.9_3)
                             _@.9
                             c!53
                             c!54)
                  (= (~ret<Int> _@.9) _*.10_0)
                  (= _*.10_0 _*.10_2)
                  (= _*.10_2 _*.12_0)
                  (= _*.12_0 _*.13_0)
                  (= _*.13_0 _*.13_1)
                  (= (~ret<%Tree> _7) (~cur<%Tree> _7))
                  (= (~ret<Int> _6) (~cur<Int> _6))
                  (= (~ret<%Tree> _5) _*.9_3)
                  (= _*.13_1 _*.15_0)
                  (= _*.15_0 _*.15_1)
                  (= (~ret<%Tree> _1) (~cur<%Tree> _1))
                  (= _@ (~mut<Int> (~cur<Int> _@.9) _*.15_1)))))
    (=> a!1 (%some.7-abs _1 _5 _6 _7 _10 true _@ c!47 c!48 c!49 c!50 c!51 c!52)))))
(assert (forall ((_1 %Tree) (_@ Int)) (=> (and (%sum.0 _1 _@)) (%sum _1 _@))))
(assert (forall ((_@ Int)
         (_@.3 Int)
         (_@.5 Int)
         (_$.0_0/0 %Tree)
         (_$.0_0/1 Int)
         (_$.0_0/2 %Tree))
  (=> (and (%sum _$.0_0/0 _@.3)
           (%sum _$.0_0/2 _@.5)
           (= _@ (+ _@.3 _$.0_0/1 _@.5)))
      (%sum.0 (%Tree-0 _$.0_0/0 _$.0_0/1 _$.0_0/2) _@))))
(assert (forall ((_@ Int)) (=> (and (= _@ 0)) (%sum.0 %Tree-1 _@))))
(assert (forall ((_% Int)) (=> (%main true) false)))
(check-sat)